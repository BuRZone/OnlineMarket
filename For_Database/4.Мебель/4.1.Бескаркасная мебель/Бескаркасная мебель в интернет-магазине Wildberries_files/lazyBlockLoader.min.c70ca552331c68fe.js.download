(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";!function(){let e=function(){function e(e,t,s,r,o=!0){if(this.element=e instanceof Element?e:document.querySelector(e),null==this.element)throw new Error("Element for LazyBlock Loader doesn`t exist");this.requestUrl=t,this.onLoadCallback=s,this.onDestroyCallback=r,this.maxRetryCount=3,this.currentRetryCount=0,this.loading=!1,this.removeFromObserver=o,this._observe=this._observe.bind(this),this._init()}var t=e.prototype;return t.reload=function(){this.destroy(),this._init()},t.destroy=function(){var e,t;null===(e=this.observer)||void 0===e||e.disconnect(),this.throttledScrollHandler&&window.removeEventListener("scroll",this.throttledScrollHandler),null===(t=this.onDestroyCallback)||void 0===t||t.call(this)},t._init=function(){this.$apiSupport.intersectionObserver?(this.observer=new IntersectionObserver(this._observe,{rootMargin:"50px 0px"}),this.observer.observe(this.element)):(this.throttledScrollHandler=this.$helper.throttle(this._scrollHandler,300).bind(this),window.addEventListener("scroll",this.throttledScrollHandler))},t._observe=function(e,t){e.forEach(({isIntersecting:e,target:s,intersectionRatio:r})=>{(e||r>0)&&!this.loading&&(this.requestUrl?this._requestDataAsync().then(e=>{e||t.unobserve(s)}):(this.removeFromObserver&&t.unobserve(s),this.onLoadCallback({isSuccess:!0})))})},t._requestDataAsync=function(){return this.loading=!0,fetch(this.requestUrl).then(e=>e.json()).then(e=>new Promise(t=>{$.processResponse(e,e=>{t(!1),this.onLoadCallback({isSuccess:!0,data:e})},e=>{t(++this.currentRetryCount<this.maxRetryCount),this.onLoadCallback({isSuccess:!1,data:{err:e}})}),this.loading=!1})).catch(e=>(console.error(e.message),this.onLoadCallback({isSuccess:!1,data:{err:e}}),Promise.resolve(++this.currentRetryCount<this.maxRetryCount)))},t._scrollHandler=function(){this.$helper.isElementInViewport(this.element)&&(this.requestUrl?this._requestDataAsync().then(e=>{e||this.destroy()}):(this.removeFromObserver&&this.destroy(),this.onLoadCallback({isSuccess:!0})))},e}();window.__spaModuleManager__.register("lazyBlockLoader",e)}();

},{}]},{},[1]);
